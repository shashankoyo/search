spring.profiles=production

logging.level.org.springframework.web=INFO
logging.file=/mnt/logs/paisa.log

spring.datasource.url=${DB_URL}?stringtype=unspecified
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.platform=postgres

spring.externaldatasource.url=${CRS_DB_URL}?stringtype=unspecified
spring.externaldatasource.username=${CRS_DB_USERNAME}
spring.externaldatasource.password=${CRS_DB_PASSWORD}
spring.externaldatasource.platform=postgres 

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true 
spring.database.driverClassName=org.postgresql.Driver

liquibase.change-log=classpath:db/changelog-master.yml

spring.jackson.property-naming-strategy=CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
spring.jpa.properties.hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.properties.hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

server.port=8081

##########KAFKA###########
#kafka.enabled=${KAFKA_ENABLED}
#kafka.consumer.oyoshare.topic=${KAFKA_TOPIC}
#kafka.consumer.mm.flatprice.topic=${KAFKA_MM_FLATPRICE_TOPIC}
#
#kafka.bootstrap.server=${KAFKA_BOOTSTRAP_SERVER}
#kafka.consumer.groupId=${KAFKA_CONSUMER_GROUPID}
#kafka.selling.price.topic=${KAFKA_BASE_TOPIC}
#kafka.pricing.rule.trigger.topic=${KAFKA_PR_TOPIC}
#kafka.priority.selling.price.topic=${KAFKA_BASE_PRIORITY_TOPIC}
#kafka.hotel.graph.topic=${KAFKA_HOTEL_GRAPH_TOPIC}
#kafka.consumer.concurrency=${KAFKA_CONCURRENCY}
#

kafka.enabled=true
kafka.bootstrap.server=localhost:9092
kafka.consumer.groupId=paisaKafkaGrp
kafka.consumer.oyoshare.topic=oyo_share
kafka.consumer.mm.flatprice.topic=mm_flat_price
kafka.selling.price.topic=basePriceCalculation
kafka.pricing.rule.trigger.topic=pricingRuleCalculation
kafka.priority.selling.price.topic=priorityBasePriceCalculation
kafka.hotel.graph.topic=hotelGraph
kafka.consumer.concurrency=1

##########THREADPOOL######
threadpool.keepAliveSeconds=60
threadpool.awaitTerminationSeconds=60

##########REDIS###########
redis.initialization.enabled=true
redis.paisa.host=${REDIS_URL_HOST}
redis.paisa.namespace=paisa

##########API - CRS###########
api.crs.base.url=https://api.oyorooms.com/api/v2
api.crs.access.token=${API_CRS_ACCESS_TOKEN}

##########AEROSPIKE#######
aerospike.hosts=${AEROSPIKE_HOSTS}
aerospike.price.namespace=${AEROSPIKE_NAMESPACE}
aerospike.price.set=${AEROSPIKE_SET}